#!/bin/bash
. "${ENV_ROOTDIR}/external_libraries/mount-partition/mount-partition.sh" load

box=$"${box:-minimal}"
distr_ver="${distr_ver:-6.8}"
arch="${arch:-x86_64}"


function cache_image () {
    echo "${CACHE_DIR}/${BRANCH}/${vm_name}.qcow2"
}

function vm_image () {
    local raw_file="${NODE_DIR}/box-disk1.raw"
    [[ -f "${CACHE_DIR}/${BRANCH}/box-disk1.raw" && "${vm_name}" == "base" ]] && raw_file="${CACHE_DIR}/${BRANCH}/box-disk1.raw"

    echo "${raw_file}"
}

function kill_vm() {
    (
        $starting_step "${vm_name}: Kill vm ${vm_name}"
        [[ ! -f "${NODE_DIR}/${vm_name}.pid" ]]
        $skip_step_if_already_done; set -x
        sudo kill $(sudo cat "${NODE_DIR}/${vm_name}.pid")
        sudo rm "${NODE_DIR}/${vm_name}.pid"
    ) ; $prev_cmd_failed

    (
        $starting_step "${vm_name}: Remove copy-on-write image"
        [ ! -f "${NODE_DIR}/${vm_name}.qcow2" ]
        $skip_step_if_already_done ; set -x
        rm -f "${NODE_DIR}/${vm_name}.qcow2"
    ) ; prev_cmd_failed
}

function destroy_vm() {
    umount-seed-image
    (
        $starting_step "${vm_name}: Remove SSH key"
        [ ! -f ${NODE_DIR}/sshkey ]
        $skip_step_if_already_done
        rm ${NODE_DIR}/sshkey
    ) ; prev_cmd_failed
    kill_vm
    (
        $starting_step "${vm_name}: Remove base cache image ${vm_name}"
        [ ! -f "$(cache_image)" ]
        $skip_step_if_already_done; set -x
        rm -f "$(cache_image)"
    ) ; $prev_cmd_failed

    (
        $starting_step "${vm_name}: Remove base raw ${vm_name}"
        [ ! -f "$(vm_image)" ]
        $skip_step_if_already_done; set -x
        rm -f "$(vm_image)"
    ) ; $prev_cmd_failed
}

function umount-seed-image() {
    (
        $starting_step "${vm_name}: Unmount temporary root folder for ${vm_name}"
        mount | grep -qw "${TMP_ROOT}"
        [[ "$?" != "0" || ! -d "${TMP_ROOT}" ]]
        $skip_step_if_already_done;
        umount-partition --sudo "${TMP_ROOT}"
        rm -rf "${TMP_ROOT}"
    ) ; prev_cmd_failed
}
